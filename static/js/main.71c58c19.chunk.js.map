{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["addRandomElement","arr","l","keys","filter","i","r","Array","from","length","Math","floor","random","Board","props","className","INDICES_A","map","e","data","f2048","a","b","c","d","_","compact","swipe","ls","fill","entries","v","KEY_ERROR","INDICES_W","INDICES_S","INDICES_D","App","useState","setData","stat","setStat","handleKeydown","key","f","isEqual","every","score","sumBy","log2","useEffect","window","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71c58c19.chunk.js","sourcesContent":["import \"./index.css\";\nimport { useState, useEffect } from 'react';\nimport _ from 'lodash';\n\nconst addRandomElement = (arr) => {\n    const l = [...arr.keys()].filter(i => arr[i] === null);\n    let r = Array.from(arr);\n    if (l.length) {\n        const k = Math.floor(Math.random() * l.length);\n        r[l[k]] = Math.random() < 0.9 ? 2 : 4;\n    }\n    return r;\n}\n\nconst Cell = (e) => {\n    return (\n        <td>\n            <div className=\"tile\">\n                <span className=\"tile-content\">\n                    {e}\n                </span>\n            </div>\n        </td>\n    );\n}\n\nconst Board = (props) => {\n    const Row = arr => <tr>{arr.map(i => Cell(props.data[i]))}</tr>; \n    return (\n        <table className=\"table\"><tbody>{INDICES_A.map(Row)}</tbody></table>\n    );\n} \n\nconst f2048 = (a, b, c, d) => {\n    if (b && !(a && a !== b)) [a, b] = [a + b, null];\n    if (c && !(b && b !== c)) [b, c] = [b + c, null];\n    if (d && !(c && c !== d)) [c, d] = [c + d, null];\n    if (c && !(b && b !== c)) [b, c] = [b + c, null];\n    if (b && !(a && a !== b)) [a, b] = [a + b, null];\n    return _.compact([a, b, c, d]);\n}\n\nconst swipe = (arr, ls) => {\n    let r = Array(16).fill(null);\n    for (const l of ls) {\n        for (const [i, v] of f2048(...l.map(i => arr[i])).entries()) {\n            r[l[i]] = v; \n        }\n    }\n    return r;\n}\n\nconst INVALID = \"Invalid move. Try again!\";\nconst DEFEATED = \"You suck at 2048 :P\";\nconst KEY_ERROR = \"Press [WASD] or [↑←↓→] keys!\";\nconst INDICES_W = [[0, 4, 8, 12], [1, 5, 9, 13], [2, 6, 10, 14], [3, 7, 11, 15]];\nconst INDICES_A = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11], [12, 13, 14, 15]];\nconst INDICES_S = [[12, 8, 4, 0], [13, 9, 5, 1], [14, 10, 6, 2], [15, 11, 7, 3]];\nconst INDICES_D = [[3, 2, 1, 0], [7, 6, 5, 4], [11, 10, 9, 8], [15, 14, 13, 12]];\n\nconst App = () => {\n    const [data, setData] = useState(\n        addRandomElement(addRandomElement(Array(16).fill(null))));\n\n    const [stat, setStat] = useState(KEY_ERROR); \n\n    const handleKeydown = (e) => {\n        const f = (key) => {\n            switch (key) {\n                case 'ArrowUp':\n                case 'w':\n                    return swipe(data, INDICES_W);\n                case 'ArrowLeft':\n                case 'a':\n                    return swipe(data, INDICES_A);\n                case 'ArrowDown':\n                case 's':\n                    return swipe(data, INDICES_S);\n                case 'ArrowRight':\n                case 'd':\n                    return swipe(data, INDICES_D);\n                default:\n                    return null;\n            }\n        }\n        const r = f(e.key);\n        if (r === null) {\n            setStat(KEY_ERROR);\n        } else if (_.isEqual(r, data)) {\n            setStat(_.every([INDICES_W, INDICES_A, INDICES_S, INDICES_D]\n                , e => _.isEqual(swipe(data, e), data))\n                ? DEFEATED\n                : INVALID);\n        } else {\n            setData(addRandomElement(r));\n            const score = _.sumBy(data, e => e ? e * (Math.log2(e) - 1) : 0);\n            setStat(`Current score: ${score}`);\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('keydown', handleKeydown);\n\n        return () => { window.removeEventListener('keydown', handleKeydown); };\n    });\n\n    return (\n        <div className=\"container\">\n            <Board data={data}/>\n            <p className=\"has-text-info has-text-centered\">{stat}</p>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}